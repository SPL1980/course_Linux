
[TOC]


* * *

## 启动 
| 命令 | 作用 |
|--------|--------|
| vi *file* | 启动**vi**，编辑指定的文件 |
| vi -R *file* | 以只读模式启动**vi**，编辑指定的文件 |
| view *file* | 以只读模式启动**vi**，编辑指定的文件 |
| vim *file* |  启动Vim，编辑指定的文件 |
| vim -C *file* |  以兼容模式启动**vi** |

## 停止
| 命令 | 作用 |
|--------|--------|
| :q! | 不保存数据而停止 |
| ZZ | 保存数据并停止 |
| :wq | 保存数据并停止 |
| :x | 保存数据并停止 |

## 系统故障后恢复
| 命令 | 作用 |
|--------|--------|
| vi -r | 显示可以恢复的文件的名称 |
| vi -r *file* | 启动**vi**，恢复指定的文件 |

## 修订键
| 命令 | 作用 |
|--------|--------|
| `<Backspace>/<Delete>` | 删除键入的最后一个字符 |
| `^W` | 删除键入的最后一个单词 |
| `^X/^U` | 删除整行 |

## 控制显示
| 命令 | 作用 |
|--------|--------|
| `^L` | 重新显示当前屏幕 |
| :set number | 显示内部行号 |
| :set nonumber | 不显示内部行号 |

## 移动光标
| 命令 | 作用 |
|--------|--------|
| h | 将光标向左移动一个位置 |
| j | 将光标向下移动一个位置 |
| k | 将光标向上移动一个位置 |
| l | 将光标向右移动一个位置 |
| `<Left>` | 将光标向左移动一个位置 |
| `<Down>` | 将光标向下移动一个位置 |
| `<Up>` | 将光标向上移动一个位置 |
| `<Right>` | 将光标向右移动一个位置 |
| `<Backspace>` | 将光标向左移动一个位置 |
| `<Space>` | 将光标向右移动一个位置 |
| - | 将光标移动到上一行的开头 |
| + | 将光标移动到下一行的开头 |
| `<Return>` | 将光标移动到下一行的开头 |
| 0 | 将光标移动到当前行的开头 |
| $ | 将光标移动到当前行的末尾 |
| ^ | 将光标移动到当前行的第一个非空格/制表符 |
| w | 将光标移动到下一个单词的词首 |
| e | 将光标移动到下一个单词的词尾 |
| b | 将光标移动到上一个单词的词首 |
| W | 同**w**，忽略标点符号  |
| E | 同**e**，忽略标点符号  |
| B | 同**b**，忽略标点符号  |
| ) | 将光标移动到下一个句子的开头 |
| ( | 将光标移动到上一个句子的开头 |
| } | 将光标移动到下一个段落的开头 |
| { | 将光标移动到上一个段落的开头 |
| H | 将光标移动到屏幕的第一行 |
| M | 将光标移动到屏幕的中间行 |
| L | 将光标移动到屏幕的最后一行 |

## 在编辑缓冲区中移动
| 命令 | 作用 |
|--------|--------|
| `^F` | 向下（前）移动一屏 |
| `^B` | 向上（后）移动一屏 |
| `n^F` | 向下移动n屏 |
| `n^B` | 向上移动n屏 |
| `^D` | 向下移动半屏 |
| `^U` | 向上移动半屏 |
| `n^D` | 向下移动n行 |
| `n^U` | 向上移动n行 |

## 搜索模式
| 命令 | 作用 |
|--------|--------|
| /regex | 向前搜索指定的正则表达式 |
| / | 向前重复搜索上一模式 |
| ?regex | 向后搜索指定的正则表达式 |
| ? | 向后重复搜索上一模式 |
| n | 重复上一个/或?命令，方向相同 |
| N | 重复上一个/或?命令，方向相反 |

## 正则表达式中使用的特殊字符
| 命令 | 作用 |
|--------|--------|
| . | 匹配除新行字符之外的任何单个字符 |
| * | 匹配0个或多个前面的字符 |
| ^ | 匹配行的开头 |
| $ | 匹配行的末尾 |
| \< | 匹配单词的开头 |
| \> | 匹配单词的末尾 |
| [ ] | 匹配括号中包含的任何一个字符 |
| [^ ] | 匹配不在括号中的任何字符 |
| \ | 按照字面意义解释接下来的符号 |

## 行号
| 命令 | 作用 |
|--------|--------|
| nG | 跳转到行号n |
| 1G | 跳转到编辑缓冲区中的第一行 |
| gg | 跳转到编辑缓冲区中的第一行 |
| G | 跳转到编辑缓冲区中的最后一行 |
| `:map g 1G` | 定义宏，使g和1G拥有相同效果 |
| `:n` | 跳转到行号n |
| `:1` | 跳转到编辑缓冲区中的第一行 |
| `:$` | 跳转到编辑缓冲区中的最后一行 |

## 插入
| 命令 | 作用 |
|--------|--------|
| i | 切换到插入模式：在光标位置前插入 |
| a | 切换到插入模式：在光标位置后插入 |
| I | 切换到插入模式：在当前行开头插入 |
| A | 切换到插入模式：在当前行末尾插入 |
| o | 切换到插入模式：打开当前行下面一行 |
| O | 切换到插入模式：打开当前行上面一行 |
| `<Escape>` | 离开插入模式，切换到命令模式 |

## 进行修改
| 命令 | 作用 |
|--------|--------|
| r | 只替换1个字符（不进入插入模式） |
| R | 键入中进行替换 |
| s | 通过插入替换1个字符 |
| C | 通过插入从当前光标替换到行末 |
| cc | 通过插入替换整个当前行 |
| S | 通过插入替换整个当前行 |
| c*move* | 通过插入从当前光标替换到*move*指定的位置 |
| ~ | 改变字母的大小写 |

## 替换模式
| 命令 | 作用 |
|--------|--------|
| `:s/pattern/replace/` | 替换当前行 |
| `:lines/pattern/replace/` | 替换指定行 |
| `:line,lines/pattern/replace/` | 替换指定范围 |
| `:%s/pattern/replace/` | 替换全部行 |

在命令的末尾，使用c可以用来请求确认，g（global，全局）可以用来替换每行的全部匹配结果。指定行号时，可以使用一个实际数字，也可是使用.（句点）表示当前行，或者$（美元符号）表示编辑缓冲区中的最后一行。数字1表示编辑缓冲区中的第一行。

## 撤销或重复改变
| 命令 | 作用 |
|--------|--------|
| u | 撤销修改编辑缓冲区的上一条命令 |
| U | 恢复当前行 |
| . | 重复修改编辑缓冲区的上一条命令 |

## 分隔和连接行 
| 命令 | 作用 |
|--------|--------|
| `r<Return>` | 将当前行分隔成两行（将字符替换成新行字符） |
| J | 将当前行与下一行连接成一个长行 |
|  `:set wm=n` | 在离右边缘n个位置时自动换行 |

## 删除
| 命令 | 作用 |
|--------|--------|
| x | 删除光标处字符 |
| X | 删除光标左边的字符 |
| D | 从当前光标删除到行尾 |
| dd | 删除整个当前行 |
| d*move* | 从当前光标删除到*move*所指定的位置 |
| dG | 从当前光标删除到编辑缓冲区的末尾 |
| d1G | 从当前光标删除到编辑缓冲区的开头 |
| *line*d | 删除指定的行 |
| `:line,lined` | 删除指定的范围 |

## 删除：有用的组合
| 命令 | 作用 |
|--------|--------|
| dw | 删除1个单词 |
| d*n*w | 删除n个单词 |
| d*n*W | 删除n个单词（忽略标点符号） |
| db | 向后删除1个单词 |
| d*n*) | 删除n个句子 |
| d*n*} | 删除n个段落 |
| dG | 从当前行删除到编辑缓冲区的末尾 |
| dgg | 从当前行删除到编辑缓冲区的开头 |
| d1G | 从当前行删除到编辑缓冲区的开头 |

## 复制上一次删除
| 命令 | 作用 |
|--------|--------|
| p | 复制缓冲区；插入到当前光标后面/下面 |
| P | 复制缓冲区；插入到当前光标前面/上面 |
| xp | 调换两个字符 |
| deep | 调换两个单词（从第一个单词的左边开始） |
| ddp | 调换两行 |
| `"1pu.u.u...` | 恢复某一次删除 |
 
## 复制与移动行
| 命令 | 作用 |
|--------|--------|
| `:linecotarget` | 复制指定的行，在目标下面插入 |
| `:line,linecotarget` | 复制指定的范围，在目标下面插入 |
| `:linemtarget` | 移动指定的行，在目标下面插入 |
| `:line,linemtarget` | 移动指定的范围，在目标下面插入 |

## 接出
| 命令 | 作用 |
|--------|--------|
| y*move* | 将当前光标接出到*move* |
| yy | 接出整个当前行 |

## 接出：有用的组合
| 命令 | 作用 |
|--------|--------|
| yw | 接出1个单词 |
| y*n*w | 接出n个单词 |
| y*n*W | 接出n个单词（忽略标点符号） |
| yb | 向后接出1个单词 |
| y*n*) | 接出n个句子 |
| y*n*} | 接出n个段落 |
| yG | 从当前行接出到编辑缓冲区的末尾 |
| ygg | 从当前行接出到编辑缓冲区的开头 |
| y1G | 从当前行接出到编辑缓冲区的开头 |

## 执行shell命令
| 命令 | 作用 |
|--------|--------|
| `:!command` | 暂停*vi*，执行指定的shell命令 |
| `!! pause vi,` | 执行上一条shell命令 |
| `:sh` | 暂停*vi*，启动一个shell |
| `:!csh` | 暂停*vi*，启动一个新的C-Shell |

## 向编辑缓冲区读入数据
| 命令 | 作用 |
|--------|--------|
| `:liner file` | 在指定行后插入*file*的内容 |
| `:r file` | 在当前行后插入*file*的内容 |
| `:liner !command` | 在指定行后插入*command*的输出 |
| `:r !command` | 在当前行后插入*command*的输出 |
| `:r !look pattern` | 插入以指定模式开头的单词 |

## 使用shell命令处理数据
| 命令 | 作用 |
|--------|--------|
| n !!command | 对n行数据执行*command* |
| !move command | 对当前光标至*move*所指定的位置的数据执行*command* |
| !move fmt | 格式化当前光标到*move*所指定的行 |

## 写入数据
| 命令 | 作用 |
|--------|--------|
| `:w` | 将数据写入到原始文件 |
| `:w file` | 将数据写入到指定文件 |
| `:w>> file` | 将数据追加到指定文件 |

## 在编辑过程中改变文件
| 命令 | 作用 |
|--------|--------|
| `:e file` | 编辑指定的文件 |
| `:e! file` | 编辑指定的文件，忽略自动检查 |

## 缩写
| 命令 | 作用 |
|--------|--------|
| `:ab short long` | 设置*short*为*long*的缩写|
| `:ab` | 显示当前缩写 |
| `:una short` | 取消缩写*short* |
